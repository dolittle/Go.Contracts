// Copyright (c) Dolittle. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: Runtime/Embeddings/Embeddings.proto

package embeddings

import (
	artifacts "go.dolittle.io/contracts/v5/artifacts"
	protobuf "go.dolittle.io/contracts/v5/protobuf"
	events "go.dolittle.io/contracts/v5/runtime/events"
	processing "go.dolittle.io/contracts/v5/runtime/events/processing"
	projections "go.dolittle.io/contracts/v5/runtime/projections"
	services "go.dolittle.io/contracts/v5/services"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmbeddingRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallContext  *services.ReverseCallArgumentsContext `protobuf:"bytes,1,opt,name=callContext,proto3" json:"callContext,omitempty"`
	EmbeddingId  *protobuf.Uuid                        `protobuf:"bytes,2,opt,name=embeddingId,proto3" json:"embeddingId,omitempty"`
	Events       []*artifacts.Artifact                 `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	InitialState string                                `protobuf:"bytes,4,opt,name=initialState,proto3" json:"initialState,omitempty"`
}

func (x *EmbeddingRegistrationRequest) Reset() {
	*x = EmbeddingRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingRegistrationRequest) ProtoMessage() {}

func (x *EmbeddingRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingRegistrationRequest.ProtoReflect.Descriptor instead.
func (*EmbeddingRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{0}
}

func (x *EmbeddingRegistrationRequest) GetCallContext() *services.ReverseCallArgumentsContext {
	if x != nil {
		return x.CallContext
	}
	return nil
}

func (x *EmbeddingRegistrationRequest) GetEmbeddingId() *protobuf.Uuid {
	if x != nil {
		return x.EmbeddingId
	}
	return nil
}

func (x *EmbeddingRegistrationRequest) GetEvents() []*artifacts.Artifact {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *EmbeddingRegistrationRequest) GetInitialState() string {
	if x != nil {
		return x.InitialState
	}
	return ""
}

type EmbeddingCompareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*events.UncommittedEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EmbeddingCompareResponse) Reset() {
	*x = EmbeddingCompareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingCompareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingCompareResponse) ProtoMessage() {}

func (x *EmbeddingCompareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingCompareResponse.ProtoReflect.Descriptor instead.
func (*EmbeddingCompareResponse) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{1}
}

func (x *EmbeddingCompareResponse) GetEvents() []*events.UncommittedEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type EmbeddingDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*events.UncommittedEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EmbeddingDeleteResponse) Reset() {
	*x = EmbeddingDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingDeleteResponse) ProtoMessage() {}

func (x *EmbeddingDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingDeleteResponse.ProtoReflect.Descriptor instead.
func (*EmbeddingDeleteResponse) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{2}
}

func (x *EmbeddingDeleteResponse) GetEvents() []*events.UncommittedEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type EmbeddingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallContext *services.ReverseCallResponseContext `protobuf:"bytes,1,opt,name=callContext,proto3" json:"callContext,omitempty"`
	// Types that are assignable to Response:
	//	*EmbeddingResponse_Compare
	//	*EmbeddingResponse_Delete
	//	*EmbeddingResponse_ProjectionReplace
	//	*EmbeddingResponse_ProjectionDelete
	Response isEmbeddingResponse_Response `protobuf_oneof:"Response"`
	// Types that are assignable to Failure:
	//	*EmbeddingResponse_ProcessorFailure
	//	*EmbeddingResponse_Failure_
	Failure isEmbeddingResponse_Failure `protobuf_oneof:"Failure"`
}

func (x *EmbeddingResponse) Reset() {
	*x = EmbeddingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingResponse) ProtoMessage() {}

func (x *EmbeddingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingResponse.ProtoReflect.Descriptor instead.
func (*EmbeddingResponse) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{3}
}

func (x *EmbeddingResponse) GetCallContext() *services.ReverseCallResponseContext {
	if x != nil {
		return x.CallContext
	}
	return nil
}

func (m *EmbeddingResponse) GetResponse() isEmbeddingResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *EmbeddingResponse) GetCompare() *EmbeddingCompareResponse {
	if x, ok := x.GetResponse().(*EmbeddingResponse_Compare); ok {
		return x.Compare
	}
	return nil
}

func (x *EmbeddingResponse) GetDelete() *EmbeddingDeleteResponse {
	if x, ok := x.GetResponse().(*EmbeddingResponse_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *EmbeddingResponse) GetProjectionReplace() *processing.ProjectionReplaceResponse {
	if x, ok := x.GetResponse().(*EmbeddingResponse_ProjectionReplace); ok {
		return x.ProjectionReplace
	}
	return nil
}

func (x *EmbeddingResponse) GetProjectionDelete() *processing.ProjectionDeleteResponse {
	if x, ok := x.GetResponse().(*EmbeddingResponse_ProjectionDelete); ok {
		return x.ProjectionDelete
	}
	return nil
}

func (m *EmbeddingResponse) GetFailure() isEmbeddingResponse_Failure {
	if m != nil {
		return m.Failure
	}
	return nil
}

func (x *EmbeddingResponse) GetProcessorFailure() *processing.ProcessorFailure {
	if x, ok := x.GetFailure().(*EmbeddingResponse_ProcessorFailure); ok {
		return x.ProcessorFailure
	}
	return nil
}

func (x *EmbeddingResponse) GetFailure_() *protobuf.Failure {
	if x, ok := x.GetFailure().(*EmbeddingResponse_Failure_); ok {
		return x.Failure_
	}
	return nil
}

type isEmbeddingResponse_Response interface {
	isEmbeddingResponse_Response()
}

type EmbeddingResponse_Compare struct {
	Compare *EmbeddingCompareResponse `protobuf:"bytes,2,opt,name=compare,proto3,oneof"`
}

type EmbeddingResponse_Delete struct {
	Delete *EmbeddingDeleteResponse `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

type EmbeddingResponse_ProjectionReplace struct {
	ProjectionReplace *processing.ProjectionReplaceResponse `protobuf:"bytes,4,opt,name=projectionReplace,proto3,oneof"`
}

type EmbeddingResponse_ProjectionDelete struct {
	ProjectionDelete *processing.ProjectionDeleteResponse `protobuf:"bytes,5,opt,name=projectionDelete,proto3,oneof"`
}

func (*EmbeddingResponse_Compare) isEmbeddingResponse_Response() {}

func (*EmbeddingResponse_Delete) isEmbeddingResponse_Response() {}

func (*EmbeddingResponse_ProjectionReplace) isEmbeddingResponse_Response() {}

func (*EmbeddingResponse_ProjectionDelete) isEmbeddingResponse_Response() {}

type isEmbeddingResponse_Failure interface {
	isEmbeddingResponse_Failure()
}

type EmbeddingResponse_ProcessorFailure struct {
	ProcessorFailure *processing.ProcessorFailure `protobuf:"bytes,6,opt,name=processorFailure,proto3,oneof"`
}

type EmbeddingResponse_Failure_ struct {
	Failure_ *protobuf.Failure `protobuf:"bytes,7,opt,name=failure,proto3,oneof"`
}

func (*EmbeddingResponse_ProcessorFailure) isEmbeddingResponse_Failure() {}

func (*EmbeddingResponse_Failure_) isEmbeddingResponse_Failure() {}

type EmbeddingClientToRuntimeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*EmbeddingClientToRuntimeMessage_RegistrationRequest
	//	*EmbeddingClientToRuntimeMessage_HandleResult
	//	*EmbeddingClientToRuntimeMessage_Pong
	Message isEmbeddingClientToRuntimeMessage_Message `protobuf_oneof:"Message"`
}

func (x *EmbeddingClientToRuntimeMessage) Reset() {
	*x = EmbeddingClientToRuntimeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingClientToRuntimeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingClientToRuntimeMessage) ProtoMessage() {}

func (x *EmbeddingClientToRuntimeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingClientToRuntimeMessage.ProtoReflect.Descriptor instead.
func (*EmbeddingClientToRuntimeMessage) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{4}
}

func (m *EmbeddingClientToRuntimeMessage) GetMessage() isEmbeddingClientToRuntimeMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *EmbeddingClientToRuntimeMessage) GetRegistrationRequest() *EmbeddingRegistrationRequest {
	if x, ok := x.GetMessage().(*EmbeddingClientToRuntimeMessage_RegistrationRequest); ok {
		return x.RegistrationRequest
	}
	return nil
}

func (x *EmbeddingClientToRuntimeMessage) GetHandleResult() *EmbeddingResponse {
	if x, ok := x.GetMessage().(*EmbeddingClientToRuntimeMessage_HandleResult); ok {
		return x.HandleResult
	}
	return nil
}

func (x *EmbeddingClientToRuntimeMessage) GetPong() *services.Pong {
	if x, ok := x.GetMessage().(*EmbeddingClientToRuntimeMessage_Pong); ok {
		return x.Pong
	}
	return nil
}

type isEmbeddingClientToRuntimeMessage_Message interface {
	isEmbeddingClientToRuntimeMessage_Message()
}

type EmbeddingClientToRuntimeMessage_RegistrationRequest struct {
	RegistrationRequest *EmbeddingRegistrationRequest `protobuf:"bytes,1,opt,name=registrationRequest,proto3,oneof"`
}

type EmbeddingClientToRuntimeMessage_HandleResult struct {
	HandleResult *EmbeddingResponse `protobuf:"bytes,2,opt,name=handleResult,proto3,oneof"`
}

type EmbeddingClientToRuntimeMessage_Pong struct {
	Pong *services.Pong `protobuf:"bytes,3,opt,name=pong,proto3,oneof"`
}

func (*EmbeddingClientToRuntimeMessage_RegistrationRequest) isEmbeddingClientToRuntimeMessage_Message() {
}

func (*EmbeddingClientToRuntimeMessage_HandleResult) isEmbeddingClientToRuntimeMessage_Message() {}

func (*EmbeddingClientToRuntimeMessage_Pong) isEmbeddingClientToRuntimeMessage_Message() {}

type EmbeddingRegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure *protobuf.Failure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"` // If not set/empty - no failure
}

func (x *EmbeddingRegistrationResponse) Reset() {
	*x = EmbeddingRegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingRegistrationResponse) ProtoMessage() {}

func (x *EmbeddingRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingRegistrationResponse.ProtoReflect.Descriptor instead.
func (*EmbeddingRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{5}
}

func (x *EmbeddingRegistrationResponse) GetFailure() *protobuf.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

type EmbeddingCompareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectionState *projections.ProjectionCurrentState `protobuf:"bytes,1,opt,name=projectionState,proto3" json:"projectionState,omitempty"`
	EntityState     string                              `protobuf:"bytes,2,opt,name=entityState,proto3" json:"entityState,omitempty"`
}

func (x *EmbeddingCompareRequest) Reset() {
	*x = EmbeddingCompareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingCompareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingCompareRequest) ProtoMessage() {}

func (x *EmbeddingCompareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingCompareRequest.ProtoReflect.Descriptor instead.
func (*EmbeddingCompareRequest) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{6}
}

func (x *EmbeddingCompareRequest) GetProjectionState() *projections.ProjectionCurrentState {
	if x != nil {
		return x.ProjectionState
	}
	return nil
}

func (x *EmbeddingCompareRequest) GetEntityState() string {
	if x != nil {
		return x.EntityState
	}
	return ""
}

type EmbeddingDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectionState *projections.ProjectionCurrentState `protobuf:"bytes,1,opt,name=projectionState,proto3" json:"projectionState,omitempty"`
}

func (x *EmbeddingDeleteRequest) Reset() {
	*x = EmbeddingDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingDeleteRequest) ProtoMessage() {}

func (x *EmbeddingDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingDeleteRequest.ProtoReflect.Descriptor instead.
func (*EmbeddingDeleteRequest) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{7}
}

func (x *EmbeddingDeleteRequest) GetProjectionState() *projections.ProjectionCurrentState {
	if x != nil {
		return x.ProjectionState
	}
	return nil
}

type EmbeddingProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentState *projections.ProjectionCurrentState `protobuf:"bytes,1,opt,name=currentState,proto3" json:"currentState,omitempty"`
	Event        *events.UncommittedEvent            `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *EmbeddingProjectRequest) Reset() {
	*x = EmbeddingProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingProjectRequest) ProtoMessage() {}

func (x *EmbeddingProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingProjectRequest.ProtoReflect.Descriptor instead.
func (*EmbeddingProjectRequest) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{8}
}

func (x *EmbeddingProjectRequest) GetCurrentState() *projections.ProjectionCurrentState {
	if x != nil {
		return x.CurrentState
	}
	return nil
}

func (x *EmbeddingProjectRequest) GetEvent() *events.UncommittedEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type EmbeddingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallContext *services.ReverseCallRequestContext `protobuf:"bytes,1,opt,name=callContext,proto3" json:"callContext,omitempty"`
	// Types that are assignable to Request:
	//	*EmbeddingRequest_Compare
	//	*EmbeddingRequest_Delete
	//	*EmbeddingRequest_Projection
	Request isEmbeddingRequest_Request `protobuf_oneof:"Request"`
}

func (x *EmbeddingRequest) Reset() {
	*x = EmbeddingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingRequest) ProtoMessage() {}

func (x *EmbeddingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingRequest.ProtoReflect.Descriptor instead.
func (*EmbeddingRequest) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{9}
}

func (x *EmbeddingRequest) GetCallContext() *services.ReverseCallRequestContext {
	if x != nil {
		return x.CallContext
	}
	return nil
}

func (m *EmbeddingRequest) GetRequest() isEmbeddingRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *EmbeddingRequest) GetCompare() *EmbeddingCompareRequest {
	if x, ok := x.GetRequest().(*EmbeddingRequest_Compare); ok {
		return x.Compare
	}
	return nil
}

func (x *EmbeddingRequest) GetDelete() *EmbeddingDeleteRequest {
	if x, ok := x.GetRequest().(*EmbeddingRequest_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *EmbeddingRequest) GetProjection() *EmbeddingProjectRequest {
	if x, ok := x.GetRequest().(*EmbeddingRequest_Projection); ok {
		return x.Projection
	}
	return nil
}

type isEmbeddingRequest_Request interface {
	isEmbeddingRequest_Request()
}

type EmbeddingRequest_Compare struct {
	Compare *EmbeddingCompareRequest `protobuf:"bytes,2,opt,name=compare,proto3,oneof"`
}

type EmbeddingRequest_Delete struct {
	Delete *EmbeddingDeleteRequest `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

type EmbeddingRequest_Projection struct {
	Projection *EmbeddingProjectRequest `protobuf:"bytes,4,opt,name=projection,proto3,oneof"`
}

func (*EmbeddingRequest_Compare) isEmbeddingRequest_Request() {}

func (*EmbeddingRequest_Delete) isEmbeddingRequest_Request() {}

func (*EmbeddingRequest_Projection) isEmbeddingRequest_Request() {}

type EmbeddingRuntimeToClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*EmbeddingRuntimeToClientMessage_RegistrationResponse
	//	*EmbeddingRuntimeToClientMessage_HandleRequest
	//	*EmbeddingRuntimeToClientMessage_Ping
	Message isEmbeddingRuntimeToClientMessage_Message `protobuf_oneof:"Message"`
}

func (x *EmbeddingRuntimeToClientMessage) Reset() {
	*x = EmbeddingRuntimeToClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingRuntimeToClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingRuntimeToClientMessage) ProtoMessage() {}

func (x *EmbeddingRuntimeToClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingRuntimeToClientMessage.ProtoReflect.Descriptor instead.
func (*EmbeddingRuntimeToClientMessage) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{10}
}

func (m *EmbeddingRuntimeToClientMessage) GetMessage() isEmbeddingRuntimeToClientMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *EmbeddingRuntimeToClientMessage) GetRegistrationResponse() *EmbeddingRegistrationResponse {
	if x, ok := x.GetMessage().(*EmbeddingRuntimeToClientMessage_RegistrationResponse); ok {
		return x.RegistrationResponse
	}
	return nil
}

func (x *EmbeddingRuntimeToClientMessage) GetHandleRequest() *EmbeddingRequest {
	if x, ok := x.GetMessage().(*EmbeddingRuntimeToClientMessage_HandleRequest); ok {
		return x.HandleRequest
	}
	return nil
}

func (x *EmbeddingRuntimeToClientMessage) GetPing() *services.Ping {
	if x, ok := x.GetMessage().(*EmbeddingRuntimeToClientMessage_Ping); ok {
		return x.Ping
	}
	return nil
}

type isEmbeddingRuntimeToClientMessage_Message interface {
	isEmbeddingRuntimeToClientMessage_Message()
}

type EmbeddingRuntimeToClientMessage_RegistrationResponse struct {
	RegistrationResponse *EmbeddingRegistrationResponse `protobuf:"bytes,1,opt,name=registrationResponse,proto3,oneof"`
}

type EmbeddingRuntimeToClientMessage_HandleRequest struct {
	HandleRequest *EmbeddingRequest `protobuf:"bytes,2,opt,name=handleRequest,proto3,oneof"`
}

type EmbeddingRuntimeToClientMessage_Ping struct {
	Ping *services.Ping `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

func (*EmbeddingRuntimeToClientMessage_RegistrationResponse) isEmbeddingRuntimeToClientMessage_Message() {
}

func (*EmbeddingRuntimeToClientMessage_HandleRequest) isEmbeddingRuntimeToClientMessage_Message() {}

func (*EmbeddingRuntimeToClientMessage_Ping) isEmbeddingRuntimeToClientMessage_Message() {}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallContext *services.CallRequestContext `protobuf:"bytes,1,opt,name=callContext,proto3" json:"callContext,omitempty"`
	EmbeddingId *protobuf.Uuid               `protobuf:"bytes,2,opt,name=embeddingId,proto3" json:"embeddingId,omitempty"`
	Key         string                       `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	State       string                       `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateRequest) GetCallContext() *services.CallRequestContext {
	if x != nil {
		return x.CallContext
	}
	return nil
}

func (x *UpdateRequest) GetEmbeddingId() *protobuf.Uuid {
	if x != nil {
		return x.EmbeddingId
	}
	return nil
}

func (x *UpdateRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpdateRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State   *projections.ProjectionCurrentState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Failure *protobuf.Failure                   `protobuf:"bytes,2,opt,name=failure,proto3" json:"failure,omitempty"` // If not set/empty - no failure
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateResponse) GetState() *projections.ProjectionCurrentState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *UpdateResponse) GetFailure() *protobuf.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallContext *services.CallRequestContext `protobuf:"bytes,1,opt,name=callContext,proto3" json:"callContext,omitempty"`
	EmbeddingId *protobuf.Uuid               `protobuf:"bytes,2,opt,name=embeddingId,proto3" json:"embeddingId,omitempty"`
	Key         string                       `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteRequest) GetCallContext() *services.CallRequestContext {
	if x != nil {
		return x.CallContext
	}
	return nil
}

func (x *DeleteRequest) GetEmbeddingId() *protobuf.Uuid {
	if x != nil {
		return x.EmbeddingId
	}
	return nil
}

func (x *DeleteRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure *protobuf.Failure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"` // If not set/empty - no failure
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Embeddings_Embeddings_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteResponse) GetFailure() *protobuf.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

var File_Runtime_Embeddings_Embeddings_proto protoreflect.FileDescriptor

var file_Runtime_Embeddings_Embeddings_proto_rawDesc = []byte{
	0x0a, 0x23, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x2f, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x1a, 0x25, 0x46, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73,
	0x2f, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x46, 0x75, 0x6e, 0x64, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x2f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x55, 0x75, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x46, 0x75, 0x6e,
	0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x2f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x27, 0x46, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x2f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x2f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x46, 0x75, 0x6e, 0x64, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x2f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x50, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x55, 0x6e, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x2f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x2f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x02, 0x0a, 0x1c, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x6f, 0x6c,
	0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64,
	0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x55, 0x75, 0x69, 0x64, 0x52, 0x0b, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5d, 0x0a, 0x18,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x5c, 0x0a, 0x17, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x95, 0x05, 0x0a, 0x11, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x51, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x6d, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x12, 0x6a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x64,
	0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x62,
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x01,
	0x52, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48,
	0x01, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x22, 0xa0, 0x02, 0x0a, 0x1f, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x6d, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x6f, 0x6c,
	0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x55, 0x0a, 0x1d, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x17,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x78, 0x0a, 0x16, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64,
	0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x17, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x58, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xe6, 0x02, 0x0a, 0x10, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4e, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x50, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x65, 0x12, 0x4d, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x56, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xa4, 0x02, 0x0a, 0x1f, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x70, 0x0a, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0d, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2d, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x42,
	0x09, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0b,
	0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x6c,
	0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55,
	0x75, 0x69, 0x64, 0x52, 0x0b, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x6f, 0x6c,
	0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x22, 0xa5, 0x01,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x47, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0b, 0x63, 0x61, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x75, 0x69, 0x64, 0x52, 0x0b, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x46, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x32, 0xde, 0x02,
	0x0a, 0x0a, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x89, 0x01, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x3c, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x3c, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x61, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2a, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x06, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x58,
	0x5a, 0x2e, 0x67, 0x6f, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6f,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0xaa, 0x02, 0x25, 0x44, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Runtime_Embeddings_Embeddings_proto_rawDescOnce sync.Once
	file_Runtime_Embeddings_Embeddings_proto_rawDescData = file_Runtime_Embeddings_Embeddings_proto_rawDesc
)

func file_Runtime_Embeddings_Embeddings_proto_rawDescGZIP() []byte {
	file_Runtime_Embeddings_Embeddings_proto_rawDescOnce.Do(func() {
		file_Runtime_Embeddings_Embeddings_proto_rawDescData = protoimpl.X.CompressGZIP(file_Runtime_Embeddings_Embeddings_proto_rawDescData)
	})
	return file_Runtime_Embeddings_Embeddings_proto_rawDescData
}

var file_Runtime_Embeddings_Embeddings_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_Runtime_Embeddings_Embeddings_proto_goTypes = []interface{}{
	(*EmbeddingRegistrationRequest)(nil),         // 0: dolittle.runtime.embeddings.EmbeddingRegistrationRequest
	(*EmbeddingCompareResponse)(nil),             // 1: dolittle.runtime.embeddings.EmbeddingCompareResponse
	(*EmbeddingDeleteResponse)(nil),              // 2: dolittle.runtime.embeddings.EmbeddingDeleteResponse
	(*EmbeddingResponse)(nil),                    // 3: dolittle.runtime.embeddings.EmbeddingResponse
	(*EmbeddingClientToRuntimeMessage)(nil),      // 4: dolittle.runtime.embeddings.EmbeddingClientToRuntimeMessage
	(*EmbeddingRegistrationResponse)(nil),        // 5: dolittle.runtime.embeddings.EmbeddingRegistrationResponse
	(*EmbeddingCompareRequest)(nil),              // 6: dolittle.runtime.embeddings.EmbeddingCompareRequest
	(*EmbeddingDeleteRequest)(nil),               // 7: dolittle.runtime.embeddings.EmbeddingDeleteRequest
	(*EmbeddingProjectRequest)(nil),              // 8: dolittle.runtime.embeddings.EmbeddingProjectRequest
	(*EmbeddingRequest)(nil),                     // 9: dolittle.runtime.embeddings.EmbeddingRequest
	(*EmbeddingRuntimeToClientMessage)(nil),      // 10: dolittle.runtime.embeddings.EmbeddingRuntimeToClientMessage
	(*UpdateRequest)(nil),                        // 11: dolittle.runtime.embeddings.UpdateRequest
	(*UpdateResponse)(nil),                       // 12: dolittle.runtime.embeddings.UpdateResponse
	(*DeleteRequest)(nil),                        // 13: dolittle.runtime.embeddings.DeleteRequest
	(*DeleteResponse)(nil),                       // 14: dolittle.runtime.embeddings.DeleteResponse
	(*services.ReverseCallArgumentsContext)(nil), // 15: dolittle.services.ReverseCallArgumentsContext
	(*protobuf.Uuid)(nil),                        // 16: dolittle.protobuf.Uuid
	(*artifacts.Artifact)(nil),                   // 17: dolittle.artifacts.Artifact
	(*events.UncommittedEvent)(nil),              // 18: dolittle.runtime.events.UncommittedEvent
	(*services.ReverseCallResponseContext)(nil),  // 19: dolittle.services.ReverseCallResponseContext
	(*processing.ProjectionReplaceResponse)(nil), // 20: dolittle.runtime.events.processing.ProjectionReplaceResponse
	(*processing.ProjectionDeleteResponse)(nil),  // 21: dolittle.runtime.events.processing.ProjectionDeleteResponse
	(*processing.ProcessorFailure)(nil),          // 22: dolittle.runtime.events.processing.ProcessorFailure
	(*protobuf.Failure)(nil),                     // 23: dolittle.protobuf.Failure
	(*services.Pong)(nil),                        // 24: dolittle.services.Pong
	(*projections.ProjectionCurrentState)(nil),   // 25: dolittle.runtime.projections.ProjectionCurrentState
	(*services.ReverseCallRequestContext)(nil),   // 26: dolittle.services.ReverseCallRequestContext
	(*services.Ping)(nil),                        // 27: dolittle.services.Ping
	(*services.CallRequestContext)(nil),          // 28: dolittle.services.CallRequestContext
}
var file_Runtime_Embeddings_Embeddings_proto_depIdxs = []int32{
	15, // 0: dolittle.runtime.embeddings.EmbeddingRegistrationRequest.callContext:type_name -> dolittle.services.ReverseCallArgumentsContext
	16, // 1: dolittle.runtime.embeddings.EmbeddingRegistrationRequest.embeddingId:type_name -> dolittle.protobuf.Uuid
	17, // 2: dolittle.runtime.embeddings.EmbeddingRegistrationRequest.events:type_name -> dolittle.artifacts.Artifact
	18, // 3: dolittle.runtime.embeddings.EmbeddingCompareResponse.events:type_name -> dolittle.runtime.events.UncommittedEvent
	18, // 4: dolittle.runtime.embeddings.EmbeddingDeleteResponse.events:type_name -> dolittle.runtime.events.UncommittedEvent
	19, // 5: dolittle.runtime.embeddings.EmbeddingResponse.callContext:type_name -> dolittle.services.ReverseCallResponseContext
	1,  // 6: dolittle.runtime.embeddings.EmbeddingResponse.compare:type_name -> dolittle.runtime.embeddings.EmbeddingCompareResponse
	2,  // 7: dolittle.runtime.embeddings.EmbeddingResponse.delete:type_name -> dolittle.runtime.embeddings.EmbeddingDeleteResponse
	20, // 8: dolittle.runtime.embeddings.EmbeddingResponse.projectionReplace:type_name -> dolittle.runtime.events.processing.ProjectionReplaceResponse
	21, // 9: dolittle.runtime.embeddings.EmbeddingResponse.projectionDelete:type_name -> dolittle.runtime.events.processing.ProjectionDeleteResponse
	22, // 10: dolittle.runtime.embeddings.EmbeddingResponse.processorFailure:type_name -> dolittle.runtime.events.processing.ProcessorFailure
	23, // 11: dolittle.runtime.embeddings.EmbeddingResponse.failure:type_name -> dolittle.protobuf.Failure
	0,  // 12: dolittle.runtime.embeddings.EmbeddingClientToRuntimeMessage.registrationRequest:type_name -> dolittle.runtime.embeddings.EmbeddingRegistrationRequest
	3,  // 13: dolittle.runtime.embeddings.EmbeddingClientToRuntimeMessage.handleResult:type_name -> dolittle.runtime.embeddings.EmbeddingResponse
	24, // 14: dolittle.runtime.embeddings.EmbeddingClientToRuntimeMessage.pong:type_name -> dolittle.services.Pong
	23, // 15: dolittle.runtime.embeddings.EmbeddingRegistrationResponse.failure:type_name -> dolittle.protobuf.Failure
	25, // 16: dolittle.runtime.embeddings.EmbeddingCompareRequest.projectionState:type_name -> dolittle.runtime.projections.ProjectionCurrentState
	25, // 17: dolittle.runtime.embeddings.EmbeddingDeleteRequest.projectionState:type_name -> dolittle.runtime.projections.ProjectionCurrentState
	25, // 18: dolittle.runtime.embeddings.EmbeddingProjectRequest.currentState:type_name -> dolittle.runtime.projections.ProjectionCurrentState
	18, // 19: dolittle.runtime.embeddings.EmbeddingProjectRequest.event:type_name -> dolittle.runtime.events.UncommittedEvent
	26, // 20: dolittle.runtime.embeddings.EmbeddingRequest.callContext:type_name -> dolittle.services.ReverseCallRequestContext
	6,  // 21: dolittle.runtime.embeddings.EmbeddingRequest.compare:type_name -> dolittle.runtime.embeddings.EmbeddingCompareRequest
	7,  // 22: dolittle.runtime.embeddings.EmbeddingRequest.delete:type_name -> dolittle.runtime.embeddings.EmbeddingDeleteRequest
	8,  // 23: dolittle.runtime.embeddings.EmbeddingRequest.projection:type_name -> dolittle.runtime.embeddings.EmbeddingProjectRequest
	5,  // 24: dolittle.runtime.embeddings.EmbeddingRuntimeToClientMessage.registrationResponse:type_name -> dolittle.runtime.embeddings.EmbeddingRegistrationResponse
	9,  // 25: dolittle.runtime.embeddings.EmbeddingRuntimeToClientMessage.handleRequest:type_name -> dolittle.runtime.embeddings.EmbeddingRequest
	27, // 26: dolittle.runtime.embeddings.EmbeddingRuntimeToClientMessage.ping:type_name -> dolittle.services.Ping
	28, // 27: dolittle.runtime.embeddings.UpdateRequest.callContext:type_name -> dolittle.services.CallRequestContext
	16, // 28: dolittle.runtime.embeddings.UpdateRequest.embeddingId:type_name -> dolittle.protobuf.Uuid
	25, // 29: dolittle.runtime.embeddings.UpdateResponse.state:type_name -> dolittle.runtime.projections.ProjectionCurrentState
	23, // 30: dolittle.runtime.embeddings.UpdateResponse.failure:type_name -> dolittle.protobuf.Failure
	28, // 31: dolittle.runtime.embeddings.DeleteRequest.callContext:type_name -> dolittle.services.CallRequestContext
	16, // 32: dolittle.runtime.embeddings.DeleteRequest.embeddingId:type_name -> dolittle.protobuf.Uuid
	23, // 33: dolittle.runtime.embeddings.DeleteResponse.failure:type_name -> dolittle.protobuf.Failure
	4,  // 34: dolittle.runtime.embeddings.Embeddings.Connect:input_type -> dolittle.runtime.embeddings.EmbeddingClientToRuntimeMessage
	11, // 35: dolittle.runtime.embeddings.Embeddings.Update:input_type -> dolittle.runtime.embeddings.UpdateRequest
	13, // 36: dolittle.runtime.embeddings.Embeddings.Delete:input_type -> dolittle.runtime.embeddings.DeleteRequest
	10, // 37: dolittle.runtime.embeddings.Embeddings.Connect:output_type -> dolittle.runtime.embeddings.EmbeddingRuntimeToClientMessage
	12, // 38: dolittle.runtime.embeddings.Embeddings.Update:output_type -> dolittle.runtime.embeddings.UpdateResponse
	14, // 39: dolittle.runtime.embeddings.Embeddings.Delete:output_type -> dolittle.runtime.embeddings.DeleteResponse
	37, // [37:40] is the sub-list for method output_type
	34, // [34:37] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_Runtime_Embeddings_Embeddings_proto_init() }
func file_Runtime_Embeddings_Embeddings_proto_init() {
	if File_Runtime_Embeddings_Embeddings_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingCompareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingClientToRuntimeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingRegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingCompareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingRuntimeToClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Embeddings_Embeddings_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Runtime_Embeddings_Embeddings_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*EmbeddingResponse_Compare)(nil),
		(*EmbeddingResponse_Delete)(nil),
		(*EmbeddingResponse_ProjectionReplace)(nil),
		(*EmbeddingResponse_ProjectionDelete)(nil),
		(*EmbeddingResponse_ProcessorFailure)(nil),
		(*EmbeddingResponse_Failure_)(nil),
	}
	file_Runtime_Embeddings_Embeddings_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*EmbeddingClientToRuntimeMessage_RegistrationRequest)(nil),
		(*EmbeddingClientToRuntimeMessage_HandleResult)(nil),
		(*EmbeddingClientToRuntimeMessage_Pong)(nil),
	}
	file_Runtime_Embeddings_Embeddings_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*EmbeddingRequest_Compare)(nil),
		(*EmbeddingRequest_Delete)(nil),
		(*EmbeddingRequest_Projection)(nil),
	}
	file_Runtime_Embeddings_Embeddings_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*EmbeddingRuntimeToClientMessage_RegistrationResponse)(nil),
		(*EmbeddingRuntimeToClientMessage_HandleRequest)(nil),
		(*EmbeddingRuntimeToClientMessage_Ping)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Runtime_Embeddings_Embeddings_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Runtime_Embeddings_Embeddings_proto_goTypes,
		DependencyIndexes: file_Runtime_Embeddings_Embeddings_proto_depIdxs,
		MessageInfos:      file_Runtime_Embeddings_Embeddings_proto_msgTypes,
	}.Build()
	File_Runtime_Embeddings_Embeddings_proto = out.File
	file_Runtime_Embeddings_Embeddings_proto_rawDesc = nil
	file_Runtime_Embeddings_Embeddings_proto_goTypes = nil
	file_Runtime_Embeddings_Embeddings_proto_depIdxs = nil
}
