// Copyright (c) Dolittle. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: Runtime/Events.Processing/PartitionedFilters.proto

package processing

import (
	protobuf "go.dolittle.io/contracts/v7/protobuf"
	services "go.dolittle.io/contracts/v7/services"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PartitionedFilterRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallContext *services.ReverseCallArgumentsContext `protobuf:"bytes,1,opt,name=callContext,proto3" json:"callContext,omitempty"`
	ScopeId     *protobuf.Uuid                        `protobuf:"bytes,2,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	FilterId    *protobuf.Uuid                        `protobuf:"bytes,3,opt,name=filterId,proto3" json:"filterId,omitempty"`
}

func (x *PartitionedFilterRegistrationRequest) Reset() {
	*x = PartitionedFilterRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Events_Processing_PartitionedFilters_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartitionedFilterRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionedFilterRegistrationRequest) ProtoMessage() {}

func (x *PartitionedFilterRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Events_Processing_PartitionedFilters_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionedFilterRegistrationRequest.ProtoReflect.Descriptor instead.
func (*PartitionedFilterRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_Runtime_Events_Processing_PartitionedFilters_proto_rawDescGZIP(), []int{0}
}

func (x *PartitionedFilterRegistrationRequest) GetCallContext() *services.ReverseCallArgumentsContext {
	if x != nil {
		return x.CallContext
	}
	return nil
}

func (x *PartitionedFilterRegistrationRequest) GetScopeId() *protobuf.Uuid {
	if x != nil {
		return x.ScopeId
	}
	return nil
}

func (x *PartitionedFilterRegistrationRequest) GetFilterId() *protobuf.Uuid {
	if x != nil {
		return x.FilterId
	}
	return nil
}

type PartitionedFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallContext *services.ReverseCallResponseContext `protobuf:"bytes,1,opt,name=callContext,proto3" json:"callContext,omitempty"`
	IsIncluded  bool                                 `protobuf:"varint,2,opt,name=isIncluded,proto3" json:"isIncluded,omitempty"`
	PartitionId string                               `protobuf:"bytes,3,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
	Failure     *ProcessorFailure                    `protobuf:"bytes,4,opt,name=failure,proto3" json:"failure,omitempty"`
}

func (x *PartitionedFilterResponse) Reset() {
	*x = PartitionedFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Events_Processing_PartitionedFilters_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartitionedFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionedFilterResponse) ProtoMessage() {}

func (x *PartitionedFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Events_Processing_PartitionedFilters_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionedFilterResponse.ProtoReflect.Descriptor instead.
func (*PartitionedFilterResponse) Descriptor() ([]byte, []int) {
	return file_Runtime_Events_Processing_PartitionedFilters_proto_rawDescGZIP(), []int{1}
}

func (x *PartitionedFilterResponse) GetCallContext() *services.ReverseCallResponseContext {
	if x != nil {
		return x.CallContext
	}
	return nil
}

func (x *PartitionedFilterResponse) GetIsIncluded() bool {
	if x != nil {
		return x.IsIncluded
	}
	return false
}

func (x *PartitionedFilterResponse) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *PartitionedFilterResponse) GetFailure() *ProcessorFailure {
	if x != nil {
		return x.Failure
	}
	return nil
}

type PartitionedFilterClientToRuntimeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*PartitionedFilterClientToRuntimeMessage_RegistrationRequest
	//	*PartitionedFilterClientToRuntimeMessage_FilterResult
	//	*PartitionedFilterClientToRuntimeMessage_Pong
	Message isPartitionedFilterClientToRuntimeMessage_Message `protobuf_oneof:"Message"`
}

func (x *PartitionedFilterClientToRuntimeMessage) Reset() {
	*x = PartitionedFilterClientToRuntimeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Runtime_Events_Processing_PartitionedFilters_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartitionedFilterClientToRuntimeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionedFilterClientToRuntimeMessage) ProtoMessage() {}

func (x *PartitionedFilterClientToRuntimeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Runtime_Events_Processing_PartitionedFilters_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionedFilterClientToRuntimeMessage.ProtoReflect.Descriptor instead.
func (*PartitionedFilterClientToRuntimeMessage) Descriptor() ([]byte, []int) {
	return file_Runtime_Events_Processing_PartitionedFilters_proto_rawDescGZIP(), []int{2}
}

func (m *PartitionedFilterClientToRuntimeMessage) GetMessage() isPartitionedFilterClientToRuntimeMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *PartitionedFilterClientToRuntimeMessage) GetRegistrationRequest() *PartitionedFilterRegistrationRequest {
	if x, ok := x.GetMessage().(*PartitionedFilterClientToRuntimeMessage_RegistrationRequest); ok {
		return x.RegistrationRequest
	}
	return nil
}

func (x *PartitionedFilterClientToRuntimeMessage) GetFilterResult() *PartitionedFilterResponse {
	if x, ok := x.GetMessage().(*PartitionedFilterClientToRuntimeMessage_FilterResult); ok {
		return x.FilterResult
	}
	return nil
}

func (x *PartitionedFilterClientToRuntimeMessage) GetPong() *services.Pong {
	if x, ok := x.GetMessage().(*PartitionedFilterClientToRuntimeMessage_Pong); ok {
		return x.Pong
	}
	return nil
}

type isPartitionedFilterClientToRuntimeMessage_Message interface {
	isPartitionedFilterClientToRuntimeMessage_Message()
}

type PartitionedFilterClientToRuntimeMessage_RegistrationRequest struct {
	RegistrationRequest *PartitionedFilterRegistrationRequest `protobuf:"bytes,1,opt,name=registrationRequest,proto3,oneof"`
}

type PartitionedFilterClientToRuntimeMessage_FilterResult struct {
	FilterResult *PartitionedFilterResponse `protobuf:"bytes,2,opt,name=filterResult,proto3,oneof"`
}

type PartitionedFilterClientToRuntimeMessage_Pong struct {
	Pong *services.Pong `protobuf:"bytes,3,opt,name=pong,proto3,oneof"`
}

func (*PartitionedFilterClientToRuntimeMessage_RegistrationRequest) isPartitionedFilterClientToRuntimeMessage_Message() {
}

func (*PartitionedFilterClientToRuntimeMessage_FilterResult) isPartitionedFilterClientToRuntimeMessage_Message() {
}

func (*PartitionedFilterClientToRuntimeMessage_Pong) isPartitionedFilterClientToRuntimeMessage_Message() {
}

var File_Runtime_Events_Processing_PartitionedFilters_proto protoreflect.FileDescriptor

var file_Runtime_Events_Processing_PartitionedFilters_proto_rawDesc = []byte{
	0x0a, 0x32, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2f, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x55, 0x75, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x50, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x2f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe0, 0x01, 0x0a, 0x24, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65,
	0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0b, 0x63, 0x61,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x31, 0x0a, 0x07,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x75, 0x69, 0x64, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x75, 0x69, 0x64, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x19, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x22, 0xc6, 0x02, 0x0a, 0x27, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x7c, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48,
	0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x63, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x66,
	0x5a, 0x35, 0x67, 0x6f, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6f,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x37, 0x2f, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0xaa, 0x02, 0x2c, 0x44, 0x6f, 0x6c, 0x69, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Runtime_Events_Processing_PartitionedFilters_proto_rawDescOnce sync.Once
	file_Runtime_Events_Processing_PartitionedFilters_proto_rawDescData = file_Runtime_Events_Processing_PartitionedFilters_proto_rawDesc
)

func file_Runtime_Events_Processing_PartitionedFilters_proto_rawDescGZIP() []byte {
	file_Runtime_Events_Processing_PartitionedFilters_proto_rawDescOnce.Do(func() {
		file_Runtime_Events_Processing_PartitionedFilters_proto_rawDescData = protoimpl.X.CompressGZIP(file_Runtime_Events_Processing_PartitionedFilters_proto_rawDescData)
	})
	return file_Runtime_Events_Processing_PartitionedFilters_proto_rawDescData
}

var file_Runtime_Events_Processing_PartitionedFilters_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_Runtime_Events_Processing_PartitionedFilters_proto_goTypes = []interface{}{
	(*PartitionedFilterRegistrationRequest)(nil),    // 0: dolittle.runtime.events.processing.PartitionedFilterRegistrationRequest
	(*PartitionedFilterResponse)(nil),               // 1: dolittle.runtime.events.processing.PartitionedFilterResponse
	(*PartitionedFilterClientToRuntimeMessage)(nil), // 2: dolittle.runtime.events.processing.PartitionedFilterClientToRuntimeMessage
	(*services.ReverseCallArgumentsContext)(nil),    // 3: dolittle.services.ReverseCallArgumentsContext
	(*protobuf.Uuid)(nil),                           // 4: dolittle.protobuf.Uuid
	(*services.ReverseCallResponseContext)(nil),     // 5: dolittle.services.ReverseCallResponseContext
	(*ProcessorFailure)(nil),                        // 6: dolittle.runtime.events.processing.ProcessorFailure
	(*services.Pong)(nil),                           // 7: dolittle.services.Pong
}
var file_Runtime_Events_Processing_PartitionedFilters_proto_depIdxs = []int32{
	3, // 0: dolittle.runtime.events.processing.PartitionedFilterRegistrationRequest.callContext:type_name -> dolittle.services.ReverseCallArgumentsContext
	4, // 1: dolittle.runtime.events.processing.PartitionedFilterRegistrationRequest.scopeId:type_name -> dolittle.protobuf.Uuid
	4, // 2: dolittle.runtime.events.processing.PartitionedFilterRegistrationRequest.filterId:type_name -> dolittle.protobuf.Uuid
	5, // 3: dolittle.runtime.events.processing.PartitionedFilterResponse.callContext:type_name -> dolittle.services.ReverseCallResponseContext
	6, // 4: dolittle.runtime.events.processing.PartitionedFilterResponse.failure:type_name -> dolittle.runtime.events.processing.ProcessorFailure
	0, // 5: dolittle.runtime.events.processing.PartitionedFilterClientToRuntimeMessage.registrationRequest:type_name -> dolittle.runtime.events.processing.PartitionedFilterRegistrationRequest
	1, // 6: dolittle.runtime.events.processing.PartitionedFilterClientToRuntimeMessage.filterResult:type_name -> dolittle.runtime.events.processing.PartitionedFilterResponse
	7, // 7: dolittle.runtime.events.processing.PartitionedFilterClientToRuntimeMessage.pong:type_name -> dolittle.services.Pong
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_Runtime_Events_Processing_PartitionedFilters_proto_init() }
func file_Runtime_Events_Processing_PartitionedFilters_proto_init() {
	if File_Runtime_Events_Processing_PartitionedFilters_proto != nil {
		return
	}
	file_Runtime_Events_Processing_Processors_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Runtime_Events_Processing_PartitionedFilters_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartitionedFilterRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Events_Processing_PartitionedFilters_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartitionedFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Runtime_Events_Processing_PartitionedFilters_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartitionedFilterClientToRuntimeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Runtime_Events_Processing_PartitionedFilters_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*PartitionedFilterClientToRuntimeMessage_RegistrationRequest)(nil),
		(*PartitionedFilterClientToRuntimeMessage_FilterResult)(nil),
		(*PartitionedFilterClientToRuntimeMessage_Pong)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Runtime_Events_Processing_PartitionedFilters_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Runtime_Events_Processing_PartitionedFilters_proto_goTypes,
		DependencyIndexes: file_Runtime_Events_Processing_PartitionedFilters_proto_depIdxs,
		MessageInfos:      file_Runtime_Events_Processing_PartitionedFilters_proto_msgTypes,
	}.Build()
	File_Runtime_Events_Processing_PartitionedFilters_proto = out.File
	file_Runtime_Events_Processing_PartitionedFilters_proto_rawDesc = nil
	file_Runtime_Events_Processing_PartitionedFilters_proto_goTypes = nil
	file_Runtime_Events_Processing_PartitionedFilters_proto_depIdxs = nil
}
